- name: Setting new disks available to vg
  hosts: localhost
  become: false
  gather_facts: false

  vars:    
    vg_defined: "datavg"
#    vg_defined: "datavge"
#    disk_label_pattern: "wd"
    disk_label_pattern: "sd"
    filesystem_type: "lvm"
  tasks:
    - name: Collect facts about hardware
      setup:
        gather_subset:
          - hardware

    - name: Output disks info found
      set_fact:
        all_available_disks_list: "{{ hostvars[inventory_hostname].ansible_devices.keys() | select('match', '^' + disk_label_pattern ) | list }}"

    - name: Stop process if defined disk pattern label was not found
      fail:
        msg: "No disks found with sd/vd/hd defined pattern. For example: pattern chosen: sd--> disk label --> /dev/sdXX. Please check disk label pattern manually."
      when: all_available_disks_list | length == 0

#    - name: echo list
#      debug:
#        var: "{{ item }}"
#      loop: "{{ all_available_disks_list }}"

    - name: Retrieve info about all disks found with label pattern defined
      parted:
        device: /dev/"{{ item }}"
        number: 1
        state: info
      loop: "{{ all_available_disks_list }}"
      register: info_disks
      ignore_errors: true

#    - name: echo unknown FS
#      debug:
#        msg: "{{ item.disk.dev }}"
#      when: " item.disk.table == 'unknown'"
#      loop: "{{ info_disks.results }}"

    - name: Select last new disk added at system
      set_fact:
        disk_found: "{{ item.disk.dev }}"
        partition_table_found: "{{ item.disk.table }}"
      when: " item.disk.table == 'unknown'"
      loop: "{{ info_disks.results }}"
      ignore_errors: true

    - name: Stop process if no new disk available (with unknown disk table) were found
      fail:
        msg: No new disk were found. Please check it manually.
      when: disk_found is not defined or partition_table_found is not defined

    - name: Stop process if disk found has not correct disk table format (must be unknown).
      fail:
        msg: "Disk found has not correct format 'unknown' like a new disk. Please check it manually."
      when: partition_table_found != 'unknown'

    - name: debug disk found and partition table found
      debug:
        msg: "New disk {{ disk_found }} found! Its partition table format is {{ partition_table_found }} (should be unknown)"

    - name: Creating PV - Partitioning disk found
      parted:
        device: "{{ disk_found }}"
        number: 1
        state: present

    - name: Formattng PV - Formatting disk found
      filesystem:
        fstype: "{{ filesystem_type }}"
        dev: "{{ disk_found }}1"

##vgcreate
#    - name: Assign PV to VG
#      lvg:
#        vg: "{{ vg_defined }}"
#        pvs: "{{ disk_found }}1"
#        state: present

    - name: Adding PV created from disk available to volume group.
      command: vgextend {{ vg_defined }} {{ disk_found }}1
      register: result_vgextend

    - name: Check if resize VG process failed (showing errors detected)
      fail:
        msg: "Hubo un problema al ampliar el VG. Salida del comando vgextend VG PV: {{ result_vgextend.stdout }}"
      when: result_vgextend.stderr_lines | length > 0

    - name: Stop tasks if resize VG process failed.
      fail:
        msg: "Hubo un problema al ampliar el VG. Revisar mensaje anterior, probablemente el nombre del VG no es correcto."
      when: result_vgextend.stderr_lines | length > 0

    - name: Success message if process was OK
      debug:
        msg: "Proceso realizado OK. Output del proceso: {{ result_vgextend.stdout }}."
      when: result_vgextend.stdout_lines | length > 0


